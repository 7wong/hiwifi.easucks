<%
--[[
    Info      FIFA助手插件动态功能调用
    Author    Paull <paull@qq.com>
    Copyright 2016
]]--

local json = ''

local dnsmasq_script = '/etc/init.d/dnsmasq'
local ss_init_script = '/etc/init.d/easucks'
local ss_binary_path = '/usr/bin/ss-redir'
local ss_config_path = '/etc/config/easucks'

local act = luci.http.formvalue('act')
local ss_server_choice = luci.http.formvalue('ss_server_choice')
local ss_server_name = luci.http.formvalue('ss_server_name')
local ss_server_ipad = luci.http.formvalue('ss_server_ipad')
local ss_server_port = luci.http.formvalue('ss_server_port')
local ss_server_pass = luci.http.formvalue('ss_server_pass')
local ss_server_meth = luci.http.formvalue('ss_server_meth')
local ss_server_fsop = luci.http.formvalue('ss_server_fsop')
local ss_runnin_mode = luci.http.formvalue('ss_runnin_mode')
local ss_remote_dnss = luci.http.formvalue('ss_remote_dnss')
local ss_local_port = luci.http.formvalue('ss_local_port')

local my_list = '/etc/easucks/my.list'
local my_ignore = '/etc/easucks/ignore.list'
local gfw_list = '/etc/easucks/gfw.list'
local ignore_mac_list = '/etc/easucks/ignore.mac'
action = {
    -- 获取运行信息
    ['status'] = function()
        local ss_state = luci.sys.exec('if [ "`ps | grep '..ss_binary_path..' | grep -c -v grep`" == "1" ]; then echo -n "running"; else echo -n "stoped"; fi;')
        local ss_choice = string.gsub(luci.sys.exec("uci -q get easucks.ss_server_choice"), '\n', '')
        local ss_enabled = luci.sys.exec("if [ -L /etc/rc.d/S99easucks ]; then echo -n true;else echo -n false;fi")
        json = '{"ss_state": "'..ss_state..'", "ss_enabled": "'..ss_enabled..'", "ss_choice": "'..ss_choice..'"}'
    end,
    -- 获取配置信息
    ['config'] = function()
        luci.sys.exec('touch '..ss_config_path..';')
        if ss_server_choice == '' then
            ss_server_choice = luci.sys.exec("uci -q get easucks.ss_server_choice")
        end
        if ss_server_choice == '' then
            json = '{"ss_servers": {"server1": "服务器1"}, "ss_server_choice": "server1", "ss_server_name": "服务器1", "ss_server_fsop": "false", "ss_server_meth": "rc4-md5", "ss_server_port": "1717", "ss_local_port": "61717", "ss_remote_dnss": "8.8.4.4", "ss_server_pass": "easucks", "ss_server_ipad": "xxx.xxx.xxx.xxx", "ss_runnin_mode": "gfwlist"}'
        else
            ss_server_choice = string.gsub(ss_server_choice, '\n', '')
            local ss_servers = luci.sys.exec("uci show easucks | sed 's/easucks\\.//g' | egrep 'ss_server_name|node' | sed 's/.ss_server_name//g' | awk -F= '{servers[$1]=$2}END{print \"{\"; for(i in servers){if(servers[i]==\"node\") print \"\\42\"i\"\\42: \\42\"i\"\\42,\"; else print \"\\42\"i\"\\42: \\42\"servers[i]\"\\42,\";} print \"}\"}' | tr '\\n' ' ' | sed 's/, ]/ ]/'")
            local ss_config = luci.sys.exec("uci show easucks."..ss_server_choice.." | grep easucks."..ss_server_choice..". | sed 's/easucks\\."..ss_server_choice.."\\.//g' | awk -F= '{config[$1]=$2;}END{for(i in config){print \"\\42\"i\"\\42: \\42\"config[i]\"\\42,\"}}' | tr '\\n' ' ' | sed 's/, $/ /g'")
            json = string.gsub('{"ss_servers": '..ss_servers..', "ss_server_choice": "'..ss_server_choice..'", '..ss_config..'}', ', }', '}')
        end
    end,
    -- 保存节点信息
    ['save'] = function()
        luci.sys.exec('touch '..ss_config_path..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'=node;')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_name='..ss_server_name..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_ipad='..ss_server_ipad..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_port='..ss_server_port..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_pass='..ss_server_pass..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_meth='..ss_server_meth..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_server_fsop='..ss_server_fsop..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_runnin_mode='..ss_runnin_mode..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_remote_dnss='..ss_remote_dnss..';')
        luci.sys.exec('uci set easucks.'..ss_server_choice..'.ss_local_port='..ss_local_port..';')
        luci.sys.exec('uci commit;')
        json = '{"state": 1}'
    end,
    -- 删除节点
    ['delete'] = function()
        luci.sys.exec('uci delete easucks.'..ss_server_choice..';')
        luci.sys.exec('uci commit;')
        ss_server_choice = string.gsub(luci.sys.exec("uci show easucks | sed 's/easucks\\.//g' | awk -F= '{if($2==\"node\") print $1;}' | head -1"), '\n', '')
        luci.sys.exec('uci set easucks.ss_server_choice='..ss_server_choice..';')
        luci.sys.exec('uci commit;')
        json = '{"state": 1}'
    end,
    -- 启动服务
    ['start'] = function()
        luci.sys.exec('touch '..ss_config_path..';')
        luci.sys.exec('uci set easucks.ss_server_choice='..ss_server_choice..';')
        luci.sys.exec('uci commit;')
        luci.sys.exec(ss_init_script..' start')
        json = '{"state": 1}'
    end,
    -- 重启服务
    ['restart'] = function()
        luci.sys.exec('touch '..ss_config_path..';')
        luci.sys.exec('uci set easucks.ss_server_choice='..ss_server_choice..';')
        luci.sys.exec('uci commit;')
        luci.sys.exec(ss_init_script..' restart')
        json = '{"state": 1}'
    end,
    -- 停止服务
    ['stop'] = function()
        luci.sys.exec(ss_init_script..' stop')
        json = '{"state": 1}'
    end,
    -- 是否开机自动启动服务
    ['service'] = function()
        service = luci.http.formvalue('service')
        -- 启用或禁用服务
        luci.sys.exec(ss_init_script..' '..service)
        local ss_enabled = luci.sys.exec("if [ -L /etc/rc.d/S99easucks ]; then echo -n true;else echo -n false;fi")
        json = '{"state": 1, "ss_enabled": "'..ss_enabled..'"}'
    end,
    -- 读取内置域名列表
    ['gfwlist'] = function()
        json = luci.sys.exec('cat '..gfw_list)
    end,
    -- 读取强制走代理域名列表
    ['mylist'] = function()
        json = luci.sys.exec('cat '..my_list)
    end,
    -- 保存强制走代理域名列表
    ['mylist_save'] = function()
        list = luci.http.formvalue('list')
        local temp = io.output()
        io.output(my_list)
        io.write(list)
        io.output():close()
        io.output(temp)
        luci.sys.exec("cp "..my_list.." /tmp/tmp.list")
        luci.sys.exec("cat /tmp/tmp.list|sed 's/[\\t]//g'|sed 's/ //g'|tr '\\n' ' '|sed 's/\^ *//g'|sed 's/  */ /g'|tr ' ' '\\n' > "..my_list)
        luci.sys.exec(dnsmasq_script..' restart')
        json = '{"state": 1}'
    end,
    -- 读取强制不走代理域名列表
    ['myignore'] = function()
        json = luci.sys.exec('cat '..my_ignore)
    end,
    -- 保存强制不走代理域名列表
    ['myignore_save'] = function()
        list = luci.http.formvalue('list')
        local temp = io.output()
        io.output(my_ignore)
        io.write(list)
        io.output():close()
        io.output(temp)
        luci.sys.exec("cp "..my_ignore.." /tmp/tmp.list")
        luci.sys.exec("cat /tmp/tmp.list|sed 's/[\\t]//g'|sed 's/ //g'|tr '\\n' ' '|sed 's/\^ *//g'|sed 's/  */ /g'|tr ' ' '\\n' > "..my_ignore)
        luci.sys.exec(dnsmasq_script..' restart')
        json = '{"state": 1}'
    end,
    -- 读取mac过滤列表
    ['ignoremaclist'] = function()
        json = luci.sys.exec('cat '..ignore_mac_list)
    end,
    -- 保存mac过滤列表
    ['ignoremaclist_save'] = function()
        list = luci.http.formvalue('list')
        local temp = io.output()
        io.output(ignore_mac_list)
        io.write(list)
        io.output():close()
        io.output(temp)
        luci.sys.exec("cp "..ignore_mac_list.." /tmp/tmp.list")
        luci.sys.exec("cat /tmp/tmp.list|sed 's/[\\t]//g'|sed 's/ //g'|tr '\\n' ' '|sed 's/\^ *//g'|sed 's/  */ /g'|tr ' ' '\\n' > "..ignore_mac_list)
        luci.sys.exec(dnsmasq_script..' restart')
        json = '{"state": 1}'
    end
}
if action[act] then
    action[act]()
else
    json = '{"state": 0, "msg": "不支持的命令"}'
end
%><%=json%>
